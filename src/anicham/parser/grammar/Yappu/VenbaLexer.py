# Generated from grammar/Yappu/Venba.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,40,179,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,1,0,1,0,1,0,1,1,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,3,1,4,1,4,
        1,4,1,5,1,5,1,5,1,6,1,6,1,6,1,7,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,9,
        1,10,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,
        1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,
        1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,
        1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,
        1,35,1,35,1,36,1,36,1,37,1,37,1,38,4,38,171,8,38,11,38,12,38,172,
        1,39,4,39,176,8,39,11,39,12,39,177,0,0,40,1,1,3,2,5,3,7,4,9,5,11,
        6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,
        35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,
        57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,
        79,40,1,0,3,6,0,2965,2965,2969,2970,2974,2975,2979,2980,2984,2986,
        2990,2997,1,0,10,10,2,0,9,9,32,32,180,0,1,1,0,0,0,0,3,1,0,0,0,0,
        5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,
        1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,
        1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,
        1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,
        1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,
        1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,
        1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,
        1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,1,81,1,0,0,0,3,84,1,0,0,0,5,87,
        1,0,0,0,7,90,1,0,0,0,9,93,1,0,0,0,11,96,1,0,0,0,13,99,1,0,0,0,15,
        102,1,0,0,0,17,105,1,0,0,0,19,108,1,0,0,0,21,111,1,0,0,0,23,114,
        1,0,0,0,25,117,1,0,0,0,27,119,1,0,0,0,29,121,1,0,0,0,31,123,1,0,
        0,0,33,125,1,0,0,0,35,127,1,0,0,0,37,129,1,0,0,0,39,131,1,0,0,0,
        41,133,1,0,0,0,43,135,1,0,0,0,45,137,1,0,0,0,47,139,1,0,0,0,49,141,
        1,0,0,0,51,143,1,0,0,0,53,145,1,0,0,0,55,147,1,0,0,0,57,149,1,0,
        0,0,59,151,1,0,0,0,61,153,1,0,0,0,63,155,1,0,0,0,65,157,1,0,0,0,
        67,159,1,0,0,0,69,161,1,0,0,0,71,163,1,0,0,0,73,165,1,0,0,0,75,167,
        1,0,0,0,77,170,1,0,0,0,79,175,1,0,0,0,81,82,3,25,12,0,82,83,3,53,
        26,0,83,2,1,0,0,0,84,85,3,25,12,0,85,86,3,75,37,0,86,4,1,0,0,0,87,
        88,3,25,12,0,88,89,3,73,36,0,89,6,1,0,0,0,90,91,3,25,12,0,91,92,
        3,71,35,0,92,8,1,0,0,0,93,94,3,25,12,0,94,95,3,69,34,0,95,10,1,0,
        0,0,96,97,3,25,12,0,97,98,3,67,33,0,98,12,1,0,0,0,99,100,3,25,12,
        0,100,101,3,65,32,0,101,14,1,0,0,0,102,103,3,25,12,0,103,104,3,63,
        31,0,104,16,1,0,0,0,105,106,3,25,12,0,106,107,3,61,30,0,107,18,1,
        0,0,0,108,109,3,25,12,0,109,110,3,59,29,0,110,20,1,0,0,0,111,112,
        3,25,12,0,112,113,3,57,28,0,113,22,1,0,0,0,114,115,3,25,12,0,115,
        116,3,55,27,0,116,24,1,0,0,0,117,118,7,0,0,0,118,26,1,0,0,0,119,
        120,5,2949,0,0,120,28,1,0,0,0,121,122,5,2950,0,0,122,30,1,0,0,0,
        123,124,5,2951,0,0,124,32,1,0,0,0,125,126,5,2952,0,0,126,34,1,0,
        0,0,127,128,5,2953,0,0,128,36,1,0,0,0,129,130,5,2954,0,0,130,38,
        1,0,0,0,131,132,5,2958,0,0,132,40,1,0,0,0,133,134,5,2959,0,0,134,
        42,1,0,0,0,135,136,5,2960,0,0,136,44,1,0,0,0,137,138,5,2962,0,0,
        138,46,1,0,0,0,139,140,5,2963,0,0,140,48,1,0,0,0,141,142,5,2964,
        0,0,142,50,1,0,0,0,143,144,5,2947,0,0,144,52,1,0,0,0,145,146,5,3021,
        0,0,146,54,1,0,0,0,147,148,5,3006,0,0,148,56,1,0,0,0,149,150,5,3007,
        0,0,150,58,1,0,0,0,151,152,5,3008,0,0,152,60,1,0,0,0,153,154,5,3009,
        0,0,154,62,1,0,0,0,155,156,5,3010,0,0,156,64,1,0,0,0,157,158,5,3014,
        0,0,158,66,1,0,0,0,159,160,5,3015,0,0,160,68,1,0,0,0,161,162,5,3016,
        0,0,162,70,1,0,0,0,163,164,5,3018,0,0,164,72,1,0,0,0,165,166,5,3019,
        0,0,166,74,1,0,0,0,167,168,5,3020,0,0,168,76,1,0,0,0,169,171,7,1,
        0,0,170,169,1,0,0,0,171,172,1,0,0,0,172,170,1,0,0,0,172,173,1,0,
        0,0,173,78,1,0,0,0,174,176,7,2,0,0,175,174,1,0,0,0,176,177,1,0,0,
        0,177,175,1,0,0,0,177,178,1,0,0,0,178,80,1,0,0,0,4,0,172,175,177,
        0
    ]

class VenbaLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    MEI = 1
    UYIR_MEI_OU = 2
    UYIR_MEI_OA = 3
    UYIR_MEI_O = 4
    UYIR_MEI_AI = 5
    UYIR_MEI_AE = 6
    UYIR_MEI_E = 7
    UYIR_MEI_OO = 8
    UYIR_MEI_U = 9
    UYIR_MEI_EE = 10
    UYIR_MEI_I = 11
    UYIR_MEI_AA = 12
    UYIR_MEI_A = 13
    A_UYIR = 14
    AA_UYIR = 15
    I_UYIR = 16
    EE_UYIR = 17
    U_UYIR = 18
    OO_UYIR = 19
    E_UYIR = 20
    AE_UYIR = 21
    AI_UYIR = 22
    O_UYIR = 23
    OA_UYIR = 24
    OU_UYIR = 25
    AAYTHAM = 26
    PULLI = 27
    KAAL = 28
    SULI = 29
    NEDIL_SULI = 30
    U_KURIL = 31
    U_NEDIL = 32
    EA_KURIL = 33
    EA_NEDIL = 34
    I = 35
    O_KURIL = 36
    O_NEDIL = 37
    OU = 38
    NEWLINE = 39
    WS = 40

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'\\u0B85'", "'\\u0B86'", "'\\u0B87'", "'\\u0B88'", "'\\u0B89'", 
            "'\\u0B8A'", "'\\u0B8E'", "'\\u0B8F'", "'\\u0B90'", "'\\u0B92'", 
            "'\\u0B93'", "'\\u0B94'", "'\\u0B83'", "'\\u0BCD'", "'\\u0BBE'", 
            "'\\u0BBF'", "'\\u0BC0'", "'\\u0BC1'", "'\\u0BC2'", "'\\u0BC6'", 
            "'\\u0BC7'", "'\\u0BC8'", "'\\u0BCA'", "'\\u0BCB'", "'\\u0BCC'" ]

    symbolicNames = [ "<INVALID>",
            "MEI", "UYIR_MEI_OU", "UYIR_MEI_OA", "UYIR_MEI_O", "UYIR_MEI_AI", 
            "UYIR_MEI_AE", "UYIR_MEI_E", "UYIR_MEI_OO", "UYIR_MEI_U", "UYIR_MEI_EE", 
            "UYIR_MEI_I", "UYIR_MEI_AA", "UYIR_MEI_A", "A_UYIR", "AA_UYIR", 
            "I_UYIR", "EE_UYIR", "U_UYIR", "OO_UYIR", "E_UYIR", "AE_UYIR", 
            "AI_UYIR", "O_UYIR", "OA_UYIR", "OU_UYIR", "AAYTHAM", "PULLI", 
            "KAAL", "SULI", "NEDIL_SULI", "U_KURIL", "U_NEDIL", "EA_KURIL", 
            "EA_NEDIL", "I", "O_KURIL", "O_NEDIL", "OU", "NEWLINE", "WS" ]

    ruleNames = [ "MEI", "UYIR_MEI_OU", "UYIR_MEI_OA", "UYIR_MEI_O", "UYIR_MEI_AI", 
                  "UYIR_MEI_AE", "UYIR_MEI_E", "UYIR_MEI_OO", "UYIR_MEI_U", 
                  "UYIR_MEI_EE", "UYIR_MEI_I", "UYIR_MEI_AA", "UYIR_MEI_A", 
                  "A_UYIR", "AA_UYIR", "I_UYIR", "EE_UYIR", "U_UYIR", "OO_UYIR", 
                  "E_UYIR", "AE_UYIR", "AI_UYIR", "O_UYIR", "OA_UYIR", "OU_UYIR", 
                  "AAYTHAM", "PULLI", "KAAL", "SULI", "NEDIL_SULI", "U_KURIL", 
                  "U_NEDIL", "EA_KURIL", "EA_NEDIL", "I", "O_KURIL", "O_NEDIL", 
                  "OU", "NEWLINE", "WS" ]

    grammarFileName = "Venba.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


