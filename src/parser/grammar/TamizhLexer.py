# Generated from grammar/Tamizh.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,51,248,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,1,0,1,0,1,0,
        1,1,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,5,1,6,
        1,6,1,6,1,7,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,10,1,11,
        1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,
        1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,
        1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,28,1,28,
        1,28,1,29,1,29,1,29,1,30,1,30,1,30,1,31,1,31,1,31,1,32,1,32,1,32,
        1,33,1,33,1,33,1,34,1,34,1,34,1,35,1,35,1,35,1,36,1,36,1,36,1,37,
        1,37,1,37,1,38,1,38,1,38,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,40,
        3,40,216,8,40,1,41,1,41,1,42,1,42,1,43,1,43,1,44,1,44,1,45,1,45,
        1,46,4,46,229,8,46,11,46,12,46,230,1,46,1,46,1,47,1,47,1,48,4,48,
        238,8,48,11,48,12,48,239,1,49,1,49,1,50,4,50,245,8,50,11,50,12,50,
        246,0,0,51,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,
        12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,
        23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,
        34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,
        45,91,46,93,47,95,48,97,49,99,50,101,51,1,0,6,6,0,2965,2965,2969,
        2970,2974,2975,2979,2980,2984,2986,2990,2997,3,0,2949,2954,2958,
        2960,2962,2964,8,0,33,34,39,39,63,63,92,92,96,96,123,123,125,125,
        8216,8216,1,0,44,44,2,0,9,9,32,32,1,0,10,10,254,0,1,1,0,0,0,0,3,
        1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,
        0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,
        0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,
        0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,
        0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,
        0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,
        0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,
        0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,
        0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,
        0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,1,103,
        1,0,0,0,3,106,1,0,0,0,5,109,1,0,0,0,7,112,1,0,0,0,9,115,1,0,0,0,
        11,118,1,0,0,0,13,121,1,0,0,0,15,124,1,0,0,0,17,127,1,0,0,0,19,130,
        1,0,0,0,21,133,1,0,0,0,23,136,1,0,0,0,25,139,1,0,0,0,27,141,1,0,
        0,0,29,143,1,0,0,0,31,145,1,0,0,0,33,147,1,0,0,0,35,149,1,0,0,0,
        37,151,1,0,0,0,39,153,1,0,0,0,41,155,1,0,0,0,43,157,1,0,0,0,45,159,
        1,0,0,0,47,161,1,0,0,0,49,163,1,0,0,0,51,165,1,0,0,0,53,167,1,0,
        0,0,55,169,1,0,0,0,57,174,1,0,0,0,59,177,1,0,0,0,61,180,1,0,0,0,
        63,183,1,0,0,0,65,186,1,0,0,0,67,189,1,0,0,0,69,192,1,0,0,0,71,195,
        1,0,0,0,73,198,1,0,0,0,75,201,1,0,0,0,77,204,1,0,0,0,79,207,1,0,
        0,0,81,215,1,0,0,0,83,217,1,0,0,0,85,219,1,0,0,0,87,221,1,0,0,0,
        89,223,1,0,0,0,91,225,1,0,0,0,93,228,1,0,0,0,95,234,1,0,0,0,97,237,
        1,0,0,0,99,241,1,0,0,0,101,244,1,0,0,0,103,104,3,25,12,0,104,105,
        3,29,14,0,105,2,1,0,0,0,106,107,3,25,12,0,107,108,3,51,25,0,108,
        4,1,0,0,0,109,110,3,25,12,0,110,111,3,49,24,0,111,6,1,0,0,0,112,
        113,3,25,12,0,113,114,3,47,23,0,114,8,1,0,0,0,115,116,3,25,12,0,
        116,117,3,45,22,0,117,10,1,0,0,0,118,119,3,25,12,0,119,120,3,43,
        21,0,120,12,1,0,0,0,121,122,3,25,12,0,122,123,3,41,20,0,123,14,1,
        0,0,0,124,125,3,25,12,0,125,126,3,39,19,0,126,16,1,0,0,0,127,128,
        3,25,12,0,128,129,3,37,18,0,129,18,1,0,0,0,130,131,3,25,12,0,131,
        132,3,35,17,0,132,20,1,0,0,0,133,134,3,25,12,0,134,135,3,33,16,0,
        135,22,1,0,0,0,136,137,3,25,12,0,137,138,3,31,15,0,138,24,1,0,0,
        0,139,140,7,0,0,0,140,26,1,0,0,0,141,142,7,1,0,0,142,28,1,0,0,0,
        143,144,5,3021,0,0,144,30,1,0,0,0,145,146,5,3006,0,0,146,32,1,0,
        0,0,147,148,5,3007,0,0,148,34,1,0,0,0,149,150,5,3008,0,0,150,36,
        1,0,0,0,151,152,5,3009,0,0,152,38,1,0,0,0,153,154,5,3010,0,0,154,
        40,1,0,0,0,155,156,5,3014,0,0,156,42,1,0,0,0,157,158,5,3015,0,0,
        158,44,1,0,0,0,159,160,5,3016,0,0,160,46,1,0,0,0,161,162,5,3018,
        0,0,162,48,1,0,0,0,163,164,5,3019,0,0,164,50,1,0,0,0,165,166,5,3020,
        0,0,166,52,1,0,0,0,167,168,5,2947,0,0,168,54,1,0,0,0,169,170,3,85,
        42,0,170,171,3,29,14,0,171,172,5,2992,0,0,172,173,3,35,17,0,173,
        56,1,0,0,0,174,175,3,81,40,0,175,176,3,29,14,0,176,58,1,0,0,0,177,
        178,3,81,40,0,178,179,3,51,25,0,179,60,1,0,0,0,180,181,3,81,40,0,
        181,182,3,49,24,0,182,62,1,0,0,0,183,184,3,81,40,0,184,185,3,47,
        23,0,185,64,1,0,0,0,186,187,3,81,40,0,187,188,3,45,22,0,188,66,1,
        0,0,0,189,190,3,81,40,0,190,191,3,43,21,0,191,68,1,0,0,0,192,193,
        3,81,40,0,193,194,3,41,20,0,194,70,1,0,0,0,195,196,3,81,40,0,196,
        197,3,39,19,0,197,72,1,0,0,0,198,199,3,81,40,0,199,200,3,37,18,0,
        200,74,1,0,0,0,201,202,3,81,40,0,202,203,3,35,17,0,203,76,1,0,0,
        0,204,205,3,81,40,0,205,206,3,33,16,0,206,78,1,0,0,0,207,208,3,81,
        40,0,208,209,3,31,15,0,209,80,1,0,0,0,210,216,3,83,41,0,211,216,
        3,85,42,0,212,216,3,87,43,0,213,216,3,89,44,0,214,216,3,91,45,0,
        215,210,1,0,0,0,215,211,1,0,0,0,215,212,1,0,0,0,215,213,1,0,0,0,
        215,214,1,0,0,0,216,82,1,0,0,0,217,218,5,2972,0,0,218,84,1,0,0,0,
        219,220,5,2998,0,0,220,86,1,0,0,0,221,222,5,2999,0,0,222,88,1,0,
        0,0,223,224,5,3000,0,0,224,90,1,0,0,0,225,226,5,3001,0,0,226,92,
        1,0,0,0,227,229,7,2,0,0,228,227,1,0,0,0,229,230,1,0,0,0,230,228,
        1,0,0,0,230,231,1,0,0,0,231,232,1,0,0,0,232,233,6,46,0,0,233,94,
        1,0,0,0,234,235,7,3,0,0,235,96,1,0,0,0,236,238,7,4,0,0,237,236,1,
        0,0,0,238,239,1,0,0,0,239,237,1,0,0,0,239,240,1,0,0,0,240,98,1,0,
        0,0,241,242,5,46,0,0,242,100,1,0,0,0,243,245,7,5,0,0,244,243,1,0,
        0,0,245,246,1,0,0,0,246,244,1,0,0,0,246,247,1,0,0,0,247,102,1,0,
        0,0,6,0,215,230,237,239,246,1,6,0,0
    ]

class TamizhLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    MEI = 1
    UYIR_MEI_OU = 2
    UYIR_MEI_OA = 3
    UYIR_MEI_O = 4
    UYIR_MEI_AI = 5
    UYIR_MEI_AE = 6
    UYIR_MEI_E = 7
    UYIR_MEI_OO = 8
    UYIR_MEI_U = 9
    UYIR_MEI_EE = 10
    UYIR_MEI_I = 11
    UYIR_MEI_AA = 12
    UYIR_MEI_A = 13
    UYIR = 14
    PULLI = 15
    KAAL = 16
    SULI = 17
    NEDIL_SULI = 18
    U_KURIL = 19
    U_NEDIL = 20
    EA_KURIL = 21
    EA_NEDIL = 22
    I = 23
    O_KURIL = 24
    O_NEDIL = 25
    OU = 26
    AAYTHAM = 27
    GRANTHA_SRI = 28
    GRANTHA_MEI = 29
    GRANTHA_OU = 30
    GRANTHA_OA = 31
    GRANTHA_O = 32
    GRANTHA_AI = 33
    GRANTHA_AE = 34
    GRANTHA_E = 35
    GRANTHA_OO = 36
    GRANTHA_U = 37
    GRANTHA_EE = 38
    GRANTHA_I = 39
    GRANTHA_AA = 40
    GRANTHA_A = 41
    GRANTHA_JA = 42
    GRANTHA_SH = 43
    GRANTHA_SS = 44
    GRANTHA_S = 45
    GRANTHA_H = 46
    PUNCTUATIONS = 47
    COMMA = 48
    WS = 49
    STOP_POINT = 50
    NEWLINE = 51

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'\\u0BCD'", "'\\u0BBE'", "'\\u0BBF'", "'\\u0BC0'", "'\\u0BC1'", 
            "'\\u0BC2'", "'\\u0BC6'", "'\\u0BC7'", "'\\u0BC8'", "'\\u0BCA'", 
            "'\\u0BCB'", "'\\u0BCC'", "'\\u0B83'", "'\\u0B9C'", "'\\u0BB6'", 
            "'\\u0BB7'", "'\\u0BB8'", "'\\u0BB9'", "'.'" ]

    symbolicNames = [ "<INVALID>",
            "MEI", "UYIR_MEI_OU", "UYIR_MEI_OA", "UYIR_MEI_O", "UYIR_MEI_AI", 
            "UYIR_MEI_AE", "UYIR_MEI_E", "UYIR_MEI_OO", "UYIR_MEI_U", "UYIR_MEI_EE", 
            "UYIR_MEI_I", "UYIR_MEI_AA", "UYIR_MEI_A", "UYIR", "PULLI", 
            "KAAL", "SULI", "NEDIL_SULI", "U_KURIL", "U_NEDIL", "EA_KURIL", 
            "EA_NEDIL", "I", "O_KURIL", "O_NEDIL", "OU", "AAYTHAM", "GRANTHA_SRI", 
            "GRANTHA_MEI", "GRANTHA_OU", "GRANTHA_OA", "GRANTHA_O", "GRANTHA_AI", 
            "GRANTHA_AE", "GRANTHA_E", "GRANTHA_OO", "GRANTHA_U", "GRANTHA_EE", 
            "GRANTHA_I", "GRANTHA_AA", "GRANTHA_A", "GRANTHA_JA", "GRANTHA_SH", 
            "GRANTHA_SS", "GRANTHA_S", "GRANTHA_H", "PUNCTUATIONS", "COMMA", 
            "WS", "STOP_POINT", "NEWLINE" ]

    ruleNames = [ "MEI", "UYIR_MEI_OU", "UYIR_MEI_OA", "UYIR_MEI_O", "UYIR_MEI_AI", 
                  "UYIR_MEI_AE", "UYIR_MEI_E", "UYIR_MEI_OO", "UYIR_MEI_U", 
                  "UYIR_MEI_EE", "UYIR_MEI_I", "UYIR_MEI_AA", "UYIR_MEI_A", 
                  "UYIR", "PULLI", "KAAL", "SULI", "NEDIL_SULI", "U_KURIL", 
                  "U_NEDIL", "EA_KURIL", "EA_NEDIL", "I", "O_KURIL", "O_NEDIL", 
                  "OU", "AAYTHAM", "GRANTHA_SRI", "GRANTHA_MEI", "GRANTHA_OU", 
                  "GRANTHA_OA", "GRANTHA_O", "GRANTHA_AI", "GRANTHA_AE", 
                  "GRANTHA_E", "GRANTHA_OO", "GRANTHA_U", "GRANTHA_EE", 
                  "GRANTHA_I", "GRANTHA_AA", "GRANTHA_A", "GRANTHA_JA", 
                  "GRANTHA_SH", "GRANTHA_SS", "GRANTHA_S", "GRANTHA_H", 
                  "PUNCTUATIONS", "COMMA", "WS", "STOP_POINT", "NEWLINE" ]

    grammarFileName = "Tamizh.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


